/*
 * Copyright (C) 2018  Kazuya Ujihara <ujihara.kazuya@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 * All we ask is that proper credit is given for our work, which includes
 * - but is not limited to - adding the above copyright notice to the beginning
 * of your source code files, and to any copyright notice that you may distribute
 * with programs based on this work.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT Any WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 */

<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".tt.cs" #>

<#
    void P(string name, string type, string defaultValue)
    {
#>
        private <#= type #> _<#= name #> = <#= defaultValue #>;
        public <#= type #> <#= name #>
        {
            get { return _<#= name #>; }
            set { this.SetProperty(ref this._<#= name #>, value); }
        }
<#
    }
#>

using NCDK.Renderers;
using NCDK.Renderers.Colors;
using Prism.Mvvm;
using WPF = System.Windows;

namespace NCDK.MolViewer
{
    partial class AppearanceViewModel : BindableBase
    {
<#
        P("HighlightingObjects", "string", "\"\"");
        P("Zoom", "double", "1");
        P("AlignMappedReaction", "bool", "true");
        P("BackgroundColor", "WPF.Media.Color", "WPF.Media.Colors.Transparent");
        P("AtomColorer", "IAtomColorer", "new UniColor(WPF.Media.Colors.Black)");
        P("Highlighting", "HighlightStyle", "HighlightStyle.None");
        P("OuterGlowWidth", "double", "RendererModelTools.DefaultOuterGlowWidth");
#>
    }
}
